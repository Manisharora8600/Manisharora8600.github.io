{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchInput","showMessage","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","querySelector","remove","truncateText","text","limit","shortened","indexOf","substring","addEventListener","e","value","results","output","forEach","post","image","preview","images","source","url","title","selftext","subreddit","score","innerHTML","preventDefault"],"mappings":";AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACbA,OAAQ,SAAUC,EAAYC,EAAaC,GAClCC,OAAAA,MACkCH,uCAAAA,OAAAA,EAAmBE,UAAAA,OAAAA,EAAgBD,WAAAA,OAAAA,IAEzEG,KAAK,SAACC,GAAQA,OAAAA,EAAIC,SAClBF,KAAK,SAACG,GAASA,OAAAA,EAAKA,KAAKC,SAASC,IAAI,SAACF,GAASA,OAAAA,EAAKA,SACrDG,MAAM,SAACC,GAAQC,OAAAA,QAAQC,IAAIF,OAPnB,QAAA,QAAA;;AC8Dd,aA9DD,IAAA,EAAA,EAAA,QAAA,gBA8DC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA5DD,IAAMG,EAAaC,SAASC,eAAe,eACrCC,EAAcF,SAASC,eAAe,gBA6C5C,SAASE,EAAYC,EAASC,GACtBC,IAAAA,EAAMN,SAASO,cAAc,OACnCD,EAAID,UAAqBA,SAAAA,OAAAA,GACzBC,EAAIE,YAAYR,SAASS,eAAeL,IAClCM,IAAAA,EAAkBV,SAASC,eAAe,oBAC1CjB,EAASgB,SAASC,eAAe,UACvCS,EAAgBC,aAAaL,EAAKtB,GAClC4B,WAAW,WAAMZ,OAAAA,SAASa,cAAc,UAAUC,UAAU,KAG9D,SAASC,EAAaC,EAAMC,GACpBC,IAAAA,EAAYF,EAAKG,QAAQ,IAAKF,GAChCC,OAAc,GAAdA,EAAwBF,EACrBA,EAAKI,UAAU,EAAGF,GAxD3BnB,EAAWsB,iBAAiB,SAAU,SAACC,GAC/BrC,IAAAA,EAAaiB,EAAYqB,MAEzBpC,EAASa,SAASa,cAAc,gCAAgCU,MAChErC,EAAcc,SAASC,eAAe,SAASsB,MAElC,KAAftC,GACFkB,EAAY,2BAA4B,gBAG1CD,EAAYqB,MAAQ,GAEbvC,EAAAA,QAAAA,OAAOC,EAAYC,EAAaC,GAAQE,KAAK,SAACmC,GAC/CC,IAAAA,EAAS,6BACbD,EAAQE,QAAQ,SAACC,GACTC,IAAAA,EAAQD,EAAKE,QACfF,EAAKE,QAAQC,OAAO,GAAGC,OAAOC,IAC9B,sEACJP,GAEkBG,2DAAAA,OAAAA,EAEkBD,oHAAAA,OAAAA,EAAKM,MACPlB,iDAAAA,OAAAA,EAAaY,EAAKO,SAAU,KAElDP,mCAAAA,OAAAA,EAAKK,IAILL,kJAAAA,OAAAA,EAAKQ,UAEiCR,mEAAAA,OAAAA,EAAKS,MAbvD,2DAkBFX,GAAU,SACVzB,SAASC,eAAe,WAAWoC,UAAYZ,IAGjDH,EAAEgB","file":"findit.119465af.js","sourceRoot":"..","sourcesContent":["export default {\r\n  search: function (searchTerm, searchLimit, sortBy) {\r\n    return fetch(\r\n      `http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => data.data.children.map((data) => data.data))\r\n      .catch((err) => console.log(err));\r\n  },\r\n};\r\n","import reddit from \"./redditapi\";\r\n\r\nconst searchForm = document.getElementById(\"search-form\");\r\nconst searchInput = document.getElementById(\"search-input\");\r\n\r\nsearchForm.addEventListener(\"submit\", (e) => {\r\n  const searchTerm = searchInput.value;\r\n\r\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n  const searchLimit = document.getElementById(\"limit\").value;\r\n\r\n  if (searchTerm === \"\") {\r\n    showMessage(\"Please add a search term\", \"alert-danger\");\r\n  }\r\n\r\n  searchInput.value = \"\";\r\n\r\n  reddit.search(searchTerm, searchLimit, sortBy).then((results) => {\r\n    let output = '<div class=\"card-columns\">';\r\n    results.forEach((post) => {\r\n      const image = post.preview\r\n        ? post.preview.images[0].source.url\r\n        : \"https://cdn.comparitech.com/wp-content/uploads/2017/08/reddit-1.jpg\";\r\n      output += `\r\n            <div class=\"card\">\r\n            <img src=\"${image}\" class=\"card-img-top\" alt=\"...\">\r\n            <div class=\"card-body\">\r\n                 <h5 class=\"card-title\">${post.title}</h5>\r\n                 <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\r\n                <a href=\"${\r\n                  post.url\r\n                }\" target=\"_blank\" class=\"btn btn-primary\">Read more</a>\r\n                <hr>\r\n                <span class=\"badge badge-secondary\">Subreddit: ${\r\n                  post.subreddit\r\n                }</span>\r\n                <span class=\"badge badge-dark\">Score: ${post.score}</span>\r\n            </div>\r\n        </div>\r\n        `;\r\n    });\r\n    output += \"</div>\";\r\n    document.getElementById(\"results\").innerHTML = output;\r\n  });\r\n\r\n  e.preventDefault();\r\n});\r\n\r\nfunction showMessage(message, className) {\r\n  const div = document.createElement(\"div\");\r\n  div.className = `alert ${className}`;\r\n  div.appendChild(document.createTextNode(message));\r\n  const searchContainer = document.getElementById(\"search-container\");\r\n  const search = document.getElementById(\"search\");\r\n  searchContainer.insertBefore(div, search);\r\n  setTimeout(() => document.querySelector(\".alert\").remove(), 3000);\r\n}\r\n\r\nfunction truncateText(text, limit) {\r\n  const shortened = text.indexOf(\" \", limit);\r\n  if (shortened == -1) return text;\r\n  return text.substring(0, shortened);\r\n}\r\n"]}